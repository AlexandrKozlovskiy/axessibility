%%
%% This is file `axessibility.sty',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% axessibility.dtx  (with options: `package')
%% 
%% This is a generated file.
%% 
%% Project: axessibility
%% Version: 2018/06/30 v0.1
%%
%% Based on 
%%
%% 
%% Copyright (C) 2018 by
%%    Anna Capietto, Sandro Coriasco, Tiziana Armano, Nadir Murru, Alice Ruighi, Eugenia Taranto
%% 
%% This work may be distributed and/or modified under the
%% conditions of the LaTeX Project Public License, either
%% version 1.3c of this license or (at your option) any later
%% version. This version of this license is in
%%    http://www.latex-project.org/lppl/lppl-1-3c.txt
%% and the latest version of this license is in
%%    http://www.latex-project.org/lppl.txt
%% and version 1.3 or later is part of all distributions of
%% LaTeX version 2005/12/01 or later.
%% 
%% This work has the LPPL maintenance status "maintained".
%% 
%% This Current Maintainer of this work is 
%%.    Sandro Coriasco
%% 
%% This work consists of the main source file axessibility.dtx
%% and the derived files
%%    axessibility.sty, axessibility.pdf, axessibility.ins, axessibility.drv,
%%    axessibility-pdftex.def, axessibility-dvipdfm.def, axessibility-dvips.def,
%%    axessibility-example1.tex, axessibility-example2.tex,
%%    axessibility-test1.tex.
%% 


\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{axessibility}%
  [2018/06/30 v0.3 Accessibility support by marked content for inline, displayed, multiline/aligned formulae)]
\RequirePackage{accsupp}
\RequirePackage{amsmath}
\RequirePackage{amssymb}
\RequirePackage{environ}
%% PDF compression/unicode settings
\pdfcompresslevel=0
\pdfoptionpdfminorversion=6
\input{glyphtounicode}
\pdfgentounicode=1

\makeatletter


%Renewed command \BeginAccSupp defined in package AccSupp  
% to add the string "\S" before "\span". This makes the formula readable by voice over technologies.
\renewcommand*{\BeginAccSupp}[1]{%
  \begingroup
    \setkeys{ACCSUPP}{#1}%
    \edef\ACCSUPP@span{%
      /S/Span<<%
        \ifx\ACCSUPP@Lang\relax
        \else
          /Lang\ACCSUPP@Lang
        \fi
        \ifx\ACCSUPP@Alt\relax
        \else
          /Alt\ACCSUPP@Alt
        \fi
        \ifx\ACCSUPP@ActualText\relax
        \else
          /ActualText\ACCSUPP@ActualText
        \fi
        \ifx\ACCSUPP@E\relax
        \else
          /E\ACCSUPP@E
        \fi
      >>%
    }%
    \ACCSUPP@bdc
    \ACCSUPP@space
  \endgroup
}

\newcommand{\auxiliaryspace}{ }%%% Creates a blank space to avoid clash with references (it appears a "\protect"...refer to https://tex.stackexchange.com/questions/57151/how-do-i-prevent-conflicts-between-accsupp-and-hyperref for possible handling of such issues.)
%
% This is the actual wrapper. Takles the "body" of an environment and wraps it in AccSupp commands to make the math-text available in comments.
% \detokenize allows the formula to be parsed and read as a string.
% \expandafter there applies to the token "{" and allow detokenize to be applied after argument "#1" is passed to AccSupp.
%

\long\def\wrap#1{
\BeginAccSupp{method=escape,ActualText=\detokenize\expandafter{#1}}
 #1
\EndAccSupp{}%
}

%
% The next function redefines the env. equation by calling the above wrapper to its argument. This makes "equation" accessible
%
\renewenvironment{equation}{%
 \incr@eqnum
  \mathdisplay@push
  \st@rredfalse \global\@eqnswtrue
 \mathdisplay{equation}%
  \collect@body\wrap\auxiliaryspace}{%
  \endmathdisplay{equation}%
  \mathdisplay@pop
  \ignorespacesafterend
}

%
% The next function redefines the env. "equation*" by calling the above wrapper to its argument. This makes "equation*" accessible
%

\renewenvironment{equation*}{%
  \mathdisplay@push
  \st@rredtrue \global\@eqnswfalse
  \mathdisplay{equation*}%
  \collect@body\wrap\auxiliaryspace}{%
  \endmathdisplay{equation*}%
  \mathdisplay@pop
  \ignorespacesafterend
}

%
% The next function redefines the short hand notation "\[ \]" using the above re-definition of "equation*"
%

\protected\def\[#1\]{\begin{equation*}#1\end{equation*}}

%
% The next function redefines the short hand notation "\( \)" by defining a (temporary) math environment that calls the wrapper defined above.
%

\newenvironment{tempenv}{%
  \relax\ifmmode\@badmath\else$\fi%
 \collect@body\wrap}{%
  \relax\ifmmode\ifinner$\else\@badmath\fi\else \@badmath\fi}
%
\protected\def\(#1\){\begin{tempenv}#1\end{tempenv}}
%

\makeatother




\endinput

%%
%% End of file `axessibility'.
